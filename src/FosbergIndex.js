/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var CA = ee.FeatureCollection("users/escaduto/California"),
    geometry = /* color: #d63000 */ee.Geometry.Point([-120.88243071448017, 38.14619125968646]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/

print('Running')

var i;
var jd;

for (i = 2012; i < 2013; i++) { 
  for (jd = 1; jd < 366; jd++) { 
    //print(i, jd)
    var dataset = ee.Image(ee.ImageCollection('IDAHO_EPSCOR/GRIDMET')
                          .filter(ee.Filter.calendarRange(i, i,'year'))
                          .filter(ee.Filter.calendarRange(jd,jd,'DAY_OF_YEAR'))
                          .mean());
        
    var clipped = dataset.clip(CA);
    //(1 - 2 *( M / (30 * 1.0)) + 1.5 * ( M /(30*1.0))**2 - 0.5 * (M / (30* 1.0))^3)* ((1+WIND**2)**0.5) / 0.3002'
    var FFWI = clipped.expression(
      "(b('rmax') < 10) ? (1 - (2 *( (0.03229 + (0.281073 * b('rmax')) - (0.000578 * b('rmax') * b('tmmx'))) / (30 * 1.0))) + ((1.5 * ( (0.03229 + (0.281073 * b('rmax')) - (0.000578 * b('rmax') * b('tmmx'))) /(30*1.0))**2)) - (0.5 * ((0.03229 + (0.281073 * b('rmax')) - (0.000578 * b('rmax') * b('tmmx'))) / (30 * 1.0))**3)) * (((1+b('vs')**2)**0.5) / 0.3002)" +
      ": (b('rmax') > 10 && b('rmax') <= 50) ? (1 - (2 *( (2.22749 + (0.160107* b('rmax')) - (0.01478* b('tmmx'))) / (30 * 1.0))) + ((1.5 * ( (2.22749 + (0.160107* b('rmax')) - (0.01478* b('tmmx'))) /(30*1.0))**2)) - (0.5 * ((2.22749 + (0.160107* b('rmax')) - (0.01478* b('tmmx'))) / (30 * 1.0))**3)) * (((1+b('vs')**2)**0.5) / 0.3002)" +
        ": (b('rmax') > 50) ? (1 - (2 *((21.0606 + (0.005565* (b('rmax')**2)) - (0.00035 * b('rmax') * b('tmmx')) - (0.483199 * b('rmax'))) / (30 * 1.0))) + ((1.5 * ( (21.0606 + (0.005565* (b('rmax')**2)) - (0.00035 * b('rmax') * b('tmmx')) - (0.483199 * b('rmax'))) /(30*1.0))**2)) - (0.5 * ((21.0606 + (0.005565* (b('rmax')**2)) - (0.00035 * b('rmax') * b('tmmx')) - (0.483199 * b('rmax'))) / (30 * 1.0))**3)) * (((1+b('vs')**2)**0.5) / 0.3002)" +
          ": 0"
          
          
      //"(b('rmax') < 10 ? (1 - (2 *( (0.03229 + (0.281073 * b('rmax')) - (0.000578 * b('rmax') * b('tmmx'))) / (30 * 1.0))) + ((1.5 * ( (0.03229 + (0.281073 * b('rmax')) - (0.000578 * b('rmax') * b('tmmx'))) /(30*1.0))**2)) - (0.5 * ((0.03229 + (0.281073 * b('rmax')) - (0.000578 * b('rmax') * b('tmmx'))) / (30 * 1.0))**3)) * (((1+b('vs')**2)**0.5) / 0.3002)" + 
      //": (b('rmax') > 10 && b('rmax) <= 50) ? (1 - (2 *( (2.22749 + (0.160107* b('rmax')) - (0.01478* b('tmmx'))) / (30 * 1.0))) + ((1.5 * ( (2.22749 + (0.160107* b('rmax')) - (0.01478* b('tmmx'))) /(30*1.0))**2)) - (0.5 * ((2.22749 + (0.160107* b('rmax')) - (0.01478* b('tmmx'))) / (30 * 1.0))**3)) * (((1+b('vs')**2)**0.5) / 0.3002)" + 
      //": (b('rmax') > 50) ? (1 - (2 *((21.0606 + (0.005565* (b('rmax')**2)) - (0.00035 * b('rmax') * b('tmmx')) - (0.483199 * b('rmax'))) / (30 * 1.0))) + ((1.5 * ( (21.0606 + (0.005565* (b('rmax')**2)) - (0.00035 * b('rmax') * b('tmmx')) - (0.483199 * b('rmax'))) /(30*1.0))**2)) - (0.5 * ((21.0606 + (0.005565* (b('rmax')**2)) - (0.00035 * b('rmax') * b('tmmx')) - (0.483199 * b('rmax'))) / (30 * 1.0))**3)) * (((1+b('vs')**2)**0.5) / 0.3002)" +
      //": 0"
      );
      
      Export.image.toDrive({
      image: FFWI.unmask(-9999),
      description: 'FFWI' + String(i) + String(jd),
      scale: 500,
      maxPixels: 3784216672400,
      region: CA,
      fileFormat: 'GeoTIFF',
      folder: 'FFWI_CA',
      crs : 'EPSG:4326'
    });
      
 

       //"(1 - (2 *( b('rmax') / (30 * 1.0))) + ((1.5 * ( b('vs') /(30*1.0))**2)) - (0.5 * (b('rmax') / (30 * 1.0))**3)) * (((1+b('vs')**2)**0.5) / 0.3002)"
      //"(0.03229 + (0.281073 * b('rmax')) - (0.000578 * b('rmax') * b('tmmx')))"
      //"(2.22749 + (0.160107* b('rmax')) - (0.01478* b('tmmx')))"
      //"(21.0606 + (0.005565* (b('rmax')**2)) - (0.00035 * b('rmax') * b('tmmx')) - (0.483199 * b('rmax')))"
      
      // Complete Equations 
      //"(1 - (2 *( (0.03229 + (0.281073 * b('rmax')) - (0.000578 * b('rmax') * b('tmmx'))) / (30 * 1.0))) + ((1.5 * ( (0.03229 + (0.281073 * b('rmax')) - (0.000578 * b('rmax') * b('tmmx'))) /(30*1.0))**2)) - (0.5 * ((0.03229 + (0.281073 * b('rmax')) - (0.000578 * b('rmax') * b('tmmx'))) / (30 * 1.0))**3)) * (((1+b('vs')**2)**0.5) / 0.3002)"
      //"(1 - (2 *( (2.22749 + (0.160107* b('rmax')) - (0.01478* b('tmmx'))) / (30 * 1.0))) + ((1.5 * ( (2.22749 + (0.160107* b('rmax')) - (0.01478* b('tmmx'))) /(30*1.0))**2)) - (0.5 * ((2.22749 + (0.160107* b('rmax')) - (0.01478* b('tmmx'))) / (30 * 1.0))**3)) * (((1+b('vs')**2)**0.5) / 0.3002)"
      //"(1 - (2 *((21.0606 + (0.005565* (b('rmax')**2)) - (0.00035 * b('rmax') * b('tmmx')) - (0.483199 * b('rmax'))) / (30 * 1.0))) + ((1.5 * ( (21.0606 + (0.005565* (b('rmax')**2)) - (0.00035 * b('rmax') * b('tmmx')) - (0.483199 * b('rmax'))) /(30*1.0))**2)) - (0.5 * ((21.0606 + (0.005565* (b('rmax')**2)) - (0.00035 * b('rmax') * b('tmmx')) - (0.483199 * b('rmax'))) / (30 * 1.0))**3)) * (((1+b('vs')**2)**0.5) / 0.3002)"
        
    var maximumTemperatureVis = {
          min: 290.0,
          max: 314.0,
          palette: ['d8d8d8', '4addff', '5affa3', 'f2ff89', 'ff725c'],
        };
        
    //Map.setCenter(-120.88243071448017,38.14619125968646, 5);
    //Map.addLayer(FFWI);
  }
}




/*
FFWI = n*[(1+U^2)^.5]/0.3002
where U=wind speed in mph and n=moisture damping coefficient.
n=1-2(m/30)+1.5(m/30)^2-0.5(m/30)^3
where m=equilibrium moisture content.

for h < 10 %
m=0.03229 + 0.281073h - 0.000578hT
for 10% < h <= 50%
m=2.22749 + 0.160107h - 0.01478T
for h > 50%
m=21.0606 + 0.005565H^2 - 0.00035hT - 0.483199h
where T=temperature in F and h=relative humidity in percent.
*/